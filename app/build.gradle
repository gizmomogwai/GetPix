buildscript {
  repositories {
    jcenter()
  }
}

apply plugin: 'com.android.application'

// from http://stackoverflow.com/a/22597752
def passwordFromKeychain = { name ->
  return "security find-generic-password -s ${name} -a ${name} -w".execute().text.trim();
}

import org.gradle.internal.logging.text.StyledTextOutput;
import org.gradle.internal.logging.text.StyledTextOutputFactory;
import org.gradle.internal.logging.text.StyledTextOutput.Style
def gitVersion = {
  def version = "git describe --dirty".execute().text.trim();
  if (version.indexOf('dirty') != -1) {
    services
      .get(StyledTextOutputFactory)
      .create("dirty")
      .withStyle(Style.Failure)
      .println("ATTENTION dirty build with version: '${version}'")
  }
  return version;
}

android {
  compileSdkVersion 23
  buildToolsVersion "26.0.0"

  defaultConfig {
    applicationId "com.flopcode.getpix"
    minSdkVersion 23
    targetSdkVersion 23
    versionCode 2
    versionName gitVersion()
  }
  signingConfigs {
    release {
      storeFile file("../release.keystore")
      storePassword passwordFromKeychain("play-store-keystore-password")
      keyAlias "getpix"
      keyPassword passwordFromKeychain("play-store-keystore-password")
    }
  }
  buildTypes {
    release {
      minifyEnabled true
      shrinkResources true
      proguardFile getDefaultProguardFile('proguard-android.txt')
      proguardFile 'proguard-rules.pro'
      signingConfig signingConfigs.release
      resValue "string", "app_name", "GetPix"
    }
    debug {
      applicationIdSuffix ".debug"
      resValue "string", "app_name", "GetPix-Debug"
    }

  }
}


dependencies {
  compile project(':lib')
  compile 'com.android.support:appcompat-v7:23.4.0'
  compile 'com.android.support:design:23.4.0'
  compile 'org.nanohttpd:nanohttpd:2.3.1'

  compile deps.butterknife
  annotationProcessor deps.butterknifeCompiler
}
